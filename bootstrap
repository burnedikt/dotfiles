#!/usr/bin/env bash

DOTFILES_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# load installation helpers
source "$DOTFILES_ROOT/cross-platform/.functions"
# find out which platform we're running on
pf=`platforms`

function find_bootstrap_script_of_type_for_platform {
  # can be 'packages', 'dotfiles', 'platform'
  local bootstrap_script_type=$1
  # can be any platform ('windows', 'macos')
  local platform=$2
  # check for file in platform-specific bootstrap folder
  local bootstrap_script_path="$DOTFILES_ROOT/${platform}/bootstrap/${bootstrap_script_type}.sh"
  if [[ -f $bootstrap_script_path ]]; then
    # return path to boostrap script
    echo "$bootstrap_script_path"
  else
    fail "Bootstrap script of type $bootstrap_script_type for platform $platform not found"
  fi
}

# update all submodules
info "$(printf "Updating %b%s%b" $light_green "Git Submodules" $reset_color)"
git submodule update --init --recursive .
success "$(printf "%b%s%b successfully updated" $light_green "Git Submodules" $reset_color)"

# Package Management
# run any platform specific package management tasks
packages_bootstrap_script_path=$(find_bootstrap_script_of_type_for_platform 'packages' $pf)
if [[ -f $packages_bootstrap_script_path ]]; then
  info "$(printf "Installing / Updating Packages using %b%s%b" $light_green "Package Manager" $reset_color)"
  source "$packages_bootstrap_script_path"
fi

# Symlink / Dotfile Management
info "$(printf "Taking care of dotfiles through %b%s%b" $light_green "symlinking" $reset_color)"
dotfiles_bootstrap_script_path=$(find_bootstrap_script_of_type_for_platform 'dotfiles' $pf)
if [[ -f $dotfiles_bootstrap_script_path ]]; then
  info "$(printf "Installing dotfiles to %b\$HOME%b=%b%s%b for %b\$OSTYPE%b=%b%s%b" \
      $light_red $reset_color \
      $green "$HOME" $reset_color \
      $light_red $reset_color \
      $light_yellow "$pf" $reset_color)"
  source "$dotfiles_bootstrap_script_path"
fi

# run any platform specific bootstrap scripts (e.g. osx-defaults on macos)
platform_bootstrap_script_path=$(find_bootstrap_script_of_type_for_platform 'platform' $pf)
if [[ -f $platform_bootstrap_script_path ]]; then
  info "$(printf "Running platform-specific scripts for %b%s%b" $light_green $pf $reset_color)"
  source "$platform_bootstrap_script_path"
fi

info "Updating bash / zsh configuration"
if [[ ( "$pf" == 'linux' ) || ( "$pf" == 'macos' ) ]]; then
  # reload shell as zsh
  exec zsh -l
  source $HOME/.zshrc
else
  fail "Platform $pf not supported"
fi

success "Bootstrap done"
